{"ast":null,"code":"var _jsxFileName = \"/Users/ziqianfu/diff-grader/frontend/src/components/FeedbackPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Card, Form, Button, Row, Col, Alert, Badge } from 'react-bootstrap';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FeedbackPanel = ({\n  sessionId,\n  selectedElement,\n  selectedMatch,\n  onFeedbackSaved,\n  onError\n}) => {\n  _s();\n  const [score, setScore] = useState(75);\n  const [comments, setComments] = useState('');\n  const [designPatternFeedback, setDesignPatternFeedback] = useState('');\n  const [bestPracticesFeedback, setBestPracticesFeedback] = useState('');\n  const [saving, setSaving] = useState(false);\n  const [existingFeedback, setExistingFeedback] = useState(null);\n  useEffect(() => {\n    if (selectedElement) {\n      loadExistingFeedback();\n    }\n  }, [selectedElement, sessionId]);\n  const loadExistingFeedback = async () => {\n    if (!selectedElement) return;\n    try {\n      const response = await apiService.getFeedbacks(sessionId);\n      if (response.success) {\n        const feedback = response.data.find(f => f.elementId === selectedElement.id);\n        if (feedback) {\n          setExistingFeedback(feedback);\n          setScore(feedback.score);\n          setComments(feedback.comments);\n          setDesignPatternFeedback(feedback.designPatternFeedback);\n          setBestPracticesFeedback(feedback.bestPracticesFeedback);\n        } else {\n          resetForm();\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load existing feedback:', error);\n    }\n  };\n  const resetForm = () => {\n    setExistingFeedback(null);\n    setScore(75);\n    setComments('');\n    setDesignPatternFeedback('');\n    setBestPracticesFeedback('');\n  };\n  const getScoreColor = score => {\n    if (score >= 85) return 'success';\n    if (score >= 70) return 'warning';\n    return 'danger';\n  };\n  const getScoreLabel = score => {\n    if (score >= 90) return 'Excellent';\n    if (score >= 80) return 'Good';\n    if (score >= 70) return 'Satisfactory';\n    if (score >= 60) return 'Needs Improvement';\n    return 'Poor';\n  };\n  const handleSave = async () => {\n    if (!selectedElement) {\n      onError('No element selected');\n      return;\n    }\n    setSaving(true);\n    try {\n      const feedbackData = {\n        comparisonId: sessionId,\n        elementId: selectedElement.id,\n        score,\n        comments: comments.trim(),\n        designPatternFeedback: designPatternFeedback.trim(),\n        bestPracticesFeedback: bestPracticesFeedback.trim()\n      };\n      let response;\n      if (existingFeedback) {\n        response = await apiService.updateFeedback(sessionId, existingFeedback.id, feedbackData);\n      } else {\n        response = await apiService.submitFeedback(sessionId, feedbackData);\n      }\n      if (response.success) {\n        setExistingFeedback(response.data);\n        onFeedbackSaved(response.data);\n      } else {\n        throw new Error(response.error || 'Failed to save feedback');\n      }\n    } catch (error) {\n      onError(`Failed to save feedback: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    } finally {\n      setSaving(false);\n    }\n  };\n  const suggestFeedback = () => {\n    if (!selectedMatch) return;\n    const similarity = selectedMatch.similarity;\n    const differences = selectedMatch.differences;\n\n    // Auto-suggest score based on similarity\n    const suggestedScore = Math.round(similarity * 100);\n    setScore(suggestedScore);\n\n    // Auto-suggest comments based on differences\n    if (differences.length > 0) {\n      const suggestionMap = {\n        'method signature': 'Consider reviewing method signatures for consistency with requirements.',\n        'naming convention': 'Pay attention to Java naming conventions (camelCase for methods/variables, PascalCase for classes).',\n        'access modifier': 'Review access modifiers - ensure proper encapsulation principles.',\n        'parameter': 'Check method parameters - ensure they match the expected interface.',\n        'return type': 'Verify return types match the specification.',\n        'exception handling': 'Consider adding proper exception handling.',\n        'comments': 'Add meaningful comments to explain complex logic.'\n      };\n      const suggestions = differences.map(diff => {\n        const key = Object.keys(suggestionMap).find(k => diff.toLowerCase().includes(k));\n        return key ? suggestionMap[key] : `Review: ${diff}`;\n      });\n      setComments(suggestions.join('\\n\\n'));\n    }\n\n    // Suggest design pattern feedback\n    if (selectedElement && selectedElement.type === 'class') {\n      setDesignPatternFeedback('Consider applying relevant design patterns like Singleton, Factory, or Strategy pattern where appropriate.');\n    } else if (selectedElement && selectedElement.type === 'method') {\n      setDesignPatternFeedback('Ensure methods follow Single Responsibility Principle and are properly abstracted.');\n    }\n\n    // Suggest best practices feedback\n    setBestPracticesFeedback('Follow Java coding standards: proper indentation, meaningful variable names, and appropriate use of access modifiers.');\n  };\n  if (!selectedElement) {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-0\",\n          children: \"\\uD83D\\uDCDD Feedback Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center text-muted p-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-comment-alt fa-3x mb-3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Select an element to provide feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose a code element from the comparison view to start grading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"mb-0\",\n          children: \"\\uD83D\\uDCDD Feedback Panel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), existingFeedback && /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"info\",\n          children: \"Previously Graded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"light\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Grading:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 12\n        }, this), \" \", selectedElement.name, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: [\" (\", selectedElement.type, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 12\n        }, this), selectedMatch && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-1\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Similarity: \", /*#__PURE__*/_jsxDEV(Badge, {\n              bg: getScoreColor(selectedMatch.similarity * 100),\n              children: [Math.round(selectedMatch.similarity * 100), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: [\"Score: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [score, \"/100\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 26\n                }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: getScoreColor(score),\n                  className: \"ms-2\",\n                  children: getScoreLabel(score)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Range, {\n                value: score,\n                onChange: e => setScore(parseInt(e.target.value)),\n                min: 0,\n                max: 100,\n                step: 5\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between text-muted small\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"50\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-end h-100 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-primary\",\n                size: \"sm\",\n                onClick: suggestFeedback,\n                disabled: !selectedMatch,\n                children: \"\\uD83E\\uDD16 Auto-suggest Feedback\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"General Comments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 3,\n            value: comments,\n            onChange: e => setComments(e.target.value),\n            placeholder: \"Provide specific feedback about this code element...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Design Pattern Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 2,\n            value: designPatternFeedback,\n            onChange: e => setDesignPatternFeedback(e.target.value),\n            placeholder: \"Comment on design patterns usage, SOLID principles, etc...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Best Practices Feedback\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            as: \"textarea\",\n            rows: 2,\n            value: bestPracticesFeedback,\n            onChange: e => setBestPracticesFeedback(e.target.value),\n            placeholder: \"Comment on coding standards, naming conventions, etc...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleSave,\n            disabled: saving || !comments.trim() && !designPatternFeedback.trim() && !bestPracticesFeedback.trim(),\n            children: saving ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm me-2\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), \"Saving...\"]\n            }, void 0, true) : existingFeedback ? '💾 Update Feedback' : '💾 Save Feedback'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackPanel, \"qc3x/Mg9KvwIjmi+3cLwA01dpLY=\");\n_c = FeedbackPanel;\nexport default FeedbackPanel;\nvar _c;\n$RefreshReg$(_c, \"FeedbackPanel\");","map":{"version":3,"names":["React","useState","useEffect","Card","Form","Button","Row","Col","Alert","Badge","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","FeedbackPanel","sessionId","selectedElement","selectedMatch","onFeedbackSaved","onError","_s","score","setScore","comments","setComments","designPatternFeedback","setDesignPatternFeedback","bestPracticesFeedback","setBestPracticesFeedback","saving","setSaving","existingFeedback","setExistingFeedback","loadExistingFeedback","response","getFeedbacks","success","feedback","data","find","f","elementId","id","resetForm","error","console","getScoreColor","getScoreLabel","handleSave","feedbackData","comparisonId","trim","updateFeedback","submitFeedback","Error","message","suggestFeedback","similarity","differences","suggestedScore","Math","round","length","suggestionMap","suggestions","map","diff","key","Object","keys","k","toLowerCase","includes","join","type","children","Header","className","fileName","_jsxFileName","lineNumber","columnNumber","Body","bg","variant","name","md","Group","Label","Range","value","onChange","e","parseInt","target","min","max","step","size","onClick","disabled","Control","as","rows","placeholder","role","_c","$RefreshReg$"],"sources":["/Users/ziqianfu/diff-grader/frontend/src/components/FeedbackPanel.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Card, Form, Button, Row, Col, Alert, Badge } from 'react-bootstrap';\nimport { Feedback, CodeElement, ComparisonMatch } from '../types';\nimport apiService from '../services/api';\n\ninterface FeedbackPanelProps {\n  sessionId: string;\n  selectedElement?: CodeElement;\n  selectedMatch?: ComparisonMatch;\n  onFeedbackSaved: (feedback: Feedback) => void;\n  onError: (error: string) => void;\n}\n\nconst FeedbackPanel: React.FC<FeedbackPanelProps> = ({\n  sessionId,\n  selectedElement,\n  selectedMatch,\n  onFeedbackSaved,\n  onError,\n}) => {\n  const [score, setScore] = useState<number>(75);\n  const [comments, setComments] = useState<string>('');\n  const [designPatternFeedback, setDesignPatternFeedback] = useState<string>('');\n  const [bestPracticesFeedback, setBestPracticesFeedback] = useState<string>('');\n  const [saving, setSaving] = useState<boolean>(false);\n  const [existingFeedback, setExistingFeedback] = useState<Feedback | null>(null);\n\n  useEffect(() => {\n    if (selectedElement) {\n      loadExistingFeedback();\n    }\n  }, [selectedElement, sessionId]);\n\n     const loadExistingFeedback = async () => {\n     if (!selectedElement) return;\n\n     try {\n       const response = await apiService.getFeedbacks(sessionId);\n       if (response.success) {\n         const feedback = response.data.find(f => f.elementId === selectedElement!.id);\n         if (feedback) {\n           setExistingFeedback(feedback);\n           setScore(feedback.score);\n           setComments(feedback.comments);\n           setDesignPatternFeedback(feedback.designPatternFeedback);\n           setBestPracticesFeedback(feedback.bestPracticesFeedback);\n         } else {\n           resetForm();\n         }\n       }\n     } catch (error) {\n       console.error('Failed to load existing feedback:', error);\n     }\n   };\n\n  const resetForm = () => {\n    setExistingFeedback(null);\n    setScore(75);\n    setComments('');\n    setDesignPatternFeedback('');\n    setBestPracticesFeedback('');\n  };\n\n  const getScoreColor = (score: number): string => {\n    if (score >= 85) return 'success';\n    if (score >= 70) return 'warning';\n    return 'danger';\n  };\n\n  const getScoreLabel = (score: number): string => {\n    if (score >= 90) return 'Excellent';\n    if (score >= 80) return 'Good';\n    if (score >= 70) return 'Satisfactory';\n    if (score >= 60) return 'Needs Improvement';\n    return 'Poor';\n  };\n\n  const handleSave = async () => {\n    if (!selectedElement) {\n      onError('No element selected');\n      return;\n    }\n\n    setSaving(true);\n\n    try {\n             const feedbackData = {\n         comparisonId: sessionId,\n         elementId: selectedElement!.id,\n         score,\n         comments: comments.trim(),\n         designPatternFeedback: designPatternFeedback.trim(),\n         bestPracticesFeedback: bestPracticesFeedback.trim(),\n       };\n\n      let response;\n      if (existingFeedback) {\n        response = await apiService.updateFeedback(sessionId, existingFeedback.id, feedbackData);\n      } else {\n        response = await apiService.submitFeedback(sessionId, feedbackData);\n      }\n\n      if (response.success) {\n        setExistingFeedback(response.data);\n        onFeedbackSaved(response.data);\n      } else {\n        throw new Error(response.error || 'Failed to save feedback');\n      }\n    } catch (error) {\n      onError(`Failed to save feedback: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const suggestFeedback = () => {\n    if (!selectedMatch) return;\n\n    const similarity = selectedMatch.similarity;\n    const differences = selectedMatch.differences;\n\n    // Auto-suggest score based on similarity\n    const suggestedScore = Math.round(similarity * 100);\n    setScore(suggestedScore);\n\n    // Auto-suggest comments based on differences\n    if (differences.length > 0) {\n      const suggestionMap: { [key: string]: string } = {\n        'method signature': 'Consider reviewing method signatures for consistency with requirements.',\n        'naming convention': 'Pay attention to Java naming conventions (camelCase for methods/variables, PascalCase for classes).',\n        'access modifier': 'Review access modifiers - ensure proper encapsulation principles.',\n        'parameter': 'Check method parameters - ensure they match the expected interface.',\n        'return type': 'Verify return types match the specification.',\n        'exception handling': 'Consider adding proper exception handling.',\n        'comments': 'Add meaningful comments to explain complex logic.',\n      };\n\n      const suggestions = differences.map(diff => {\n        const key = Object.keys(suggestionMap).find(k => diff.toLowerCase().includes(k));\n        return key ? suggestionMap[key] : `Review: ${diff}`;\n      });\n\n      setComments(suggestions.join('\\n\\n'));\n    }\n\n         // Suggest design pattern feedback\n     if (selectedElement && selectedElement.type === 'class') {\n       setDesignPatternFeedback('Consider applying relevant design patterns like Singleton, Factory, or Strategy pattern where appropriate.');\n     } else if (selectedElement && selectedElement.type === 'method') {\n       setDesignPatternFeedback('Ensure methods follow Single Responsibility Principle and are properly abstracted.');\n     }\n\n    // Suggest best practices feedback\n    setBestPracticesFeedback('Follow Java coding standards: proper indentation, meaningful variable names, and appropriate use of access modifiers.');\n  };\n\n  if (!selectedElement) {\n    return (\n      <Card>\n        <Card.Header>\n          <h4 className=\"mb-0\">📝 Feedback Panel</h4>\n        </Card.Header>\n        <Card.Body>\n          <div className=\"text-center text-muted p-4\">\n            <i className=\"fas fa-comment-alt fa-3x mb-3\"></i>\n            <h5>Select an element to provide feedback</h5>\n            <p>Choose a code element from the comparison view to start grading</p>\n          </div>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  return (\n    <Card>\n      <Card.Header>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <h4 className=\"mb-0\">📝 Feedback Panel</h4>\n          {existingFeedback && (\n            <Badge bg=\"info\">Previously Graded</Badge>\n          )}\n        </div>\n      </Card.Header>\n      <Card.Body>\n                 <Alert variant=\"light\" className=\"mb-3\">\n           <strong>Grading:</strong> {selectedElement!.name} \n           <span className=\"text-muted\"> ({selectedElement!.type})</span>\n           {selectedMatch && (\n             <div className=\"mt-1\">\n               <small>\n                 Similarity: <Badge bg={getScoreColor(selectedMatch.similarity * 100)}>\n                   {Math.round(selectedMatch.similarity * 100)}%\n                 </Badge>\n               </small>\n             </div>\n           )}\n         </Alert>\n\n        <Form>\n          <Row>\n            <Col md={6}>\n              <Form.Group className=\"mb-3\">\n                <Form.Label>\n                  Score: <strong>{score}/100</strong> \n                  <Badge bg={getScoreColor(score)} className=\"ms-2\">\n                    {getScoreLabel(score)}\n                  </Badge>\n                </Form.Label>\n                <Form.Range\n                  value={score}\n                  onChange={(e) => setScore(parseInt(e.target.value))}\n                  min={0}\n                  max={100}\n                  step={5}\n                />\n                <div className=\"d-flex justify-content-between text-muted small\">\n                  <span>0</span>\n                  <span>50</span>\n                  <span>100</span>\n                </div>\n              </Form.Group>\n            </Col>\n            <Col md={6}>\n              <div className=\"d-flex align-items-end h-100 pb-3\">\n                <Button \n                  variant=\"outline-primary\" \n                  size=\"sm\" \n                  onClick={suggestFeedback}\n                  disabled={!selectedMatch}\n                >\n                  🤖 Auto-suggest Feedback\n                </Button>\n              </div>\n            </Col>\n          </Row>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>General Comments</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={3}\n              value={comments}\n              onChange={(e) => setComments(e.target.value)}\n              placeholder=\"Provide specific feedback about this code element...\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Design Pattern Feedback</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={2}\n              value={designPatternFeedback}\n              onChange={(e) => setDesignPatternFeedback(e.target.value)}\n              placeholder=\"Comment on design patterns usage, SOLID principles, etc...\"\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\">\n            <Form.Label>Best Practices Feedback</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              rows={2}\n              value={bestPracticesFeedback}\n              onChange={(e) => setBestPracticesFeedback(e.target.value)}\n              placeholder=\"Comment on coding standards, naming conventions, etc...\"\n            />\n          </Form.Group>\n\n          <div className=\"d-flex justify-content-end\">\n            <Button\n              variant=\"primary\"\n              onClick={handleSave}\n              disabled={saving || (!comments.trim() && !designPatternFeedback.trim() && !bestPracticesFeedback.trim())}\n            >\n              {saving ? (\n                <>\n                  <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                  Saving...\n                </>\n              ) : existingFeedback ? (\n                '💾 Update Feedback'\n              ) : (\n                '💾 Save Feedback'\n              )}\n            </Button>\n          </div>\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FeedbackPanel; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}