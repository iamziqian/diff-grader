{"ast":null,"code":"import React,{useState,useRef,useCallback}from'react';import{Card,Button,Alert,ProgressBar,Row,Col}from'react-bootstrap';import apiService from'../services/api';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const FileUpload=_ref=>{let{onFileUploaded,onError}=_ref;const[studentFile,setStudentFile]=useState(null);const[referenceFile,setReferenceFile]=useState(null);const[studentProgress,setStudentProgress]=useState(null);const[referenceProgress,setReferenceProgress]=useState(null);const[uploading,setUploading]=useState(false);const[dragOver,setDragOver]=useState({student:false,reference:false});const studentFileRef=useRef(null);const referenceFileRef=useRef(null);const validateFile=file=>{const maxSize=50*1024*1024;// 50MB\nconst allowedTypes=['application/zip','application/x-zip-compressed'];if(!allowedTypes.includes(file.type)&&!file.name.toLowerCase().endsWith('.zip')){return'Only ZIP files are allowed';}if(file.size>maxSize){return'File size must be less than 50MB';}return null;};const handleFileSelect=(file,type)=>{const error=validateFile(file);if(error){onError(error);return;}if(type==='student'){setStudentFile(file);}else{setReferenceFile(file);}};const handleDrop=useCallback((e,type)=>{e.preventDefault();setDragOver({...dragOver,[type]:false});const files=Array.from(e.dataTransfer.files);if(files.length>0){handleFileSelect(files[0],type);}},// eslint-disable-next-line react-hooks/exhaustive-deps\n[dragOver]);const handleDragOver=(e,type)=>{e.preventDefault();setDragOver({...dragOver,[type]:true});};const handleDragLeave=(e,type)=>{e.preventDefault();setDragOver({...dragOver,[type]:false});};const uploadFile=async(file,type)=>{try{const response=await apiService.uploadFile(file,type,progress=>{if(type==='student'){setStudentProgress(progress);}else{setReferenceProgress(progress);}});if(response.success){const uploadedFile={id:response.data.fileId,name:file.name,size:file.size,type,status:'uploaded',uploadDate:new Date()};onFileUploaded(uploadedFile,type);}else{throw new Error(response.error||'Upload failed');}}catch(error){onError(`Failed to upload ${type} file: ${error instanceof Error?error.message:'Unknown error'}`);}};const handleUpload=async()=>{if(!studentFile||!referenceFile){onError('Please select both student and reference files');return;}setUploading(true);setStudentProgress(null);setReferenceProgress(null);try{await Promise.all([uploadFile(studentFile,'student'),uploadFile(referenceFile,'reference')]);}catch(error){onError(`Upload failed: ${error instanceof Error?error.message:'Unknown error'}`);}finally{setUploading(false);setStudentProgress(null);setReferenceProgress(null);}};const formatFileSize=bytes=>{if(bytes===0)return'0 Bytes';const k=1024;const sizes=['Bytes','KB','MB','GB'];const i=Math.floor(Math.log(bytes)/Math.log(k));return parseFloat((bytes/Math.pow(k,i)).toFixed(2))+' '+sizes[i];};return/*#__PURE__*/_jsxs(Card,{className:\"mb-4\",children:[/*#__PURE__*/_jsx(Card.Header,{children:/*#__PURE__*/_jsx(\"h4\",{className:\"mb-0\",children:\"\\uD83D\\uDCC1 Upload Assignment Files\"})}),/*#__PURE__*/_jsxs(Card.Body,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:`upload-area p-4 border-2 border-dashed rounded text-center mb-3 ${dragOver.student?'border-primary bg-light':'border-secondary'}`,onDrop:e=>handleDrop(e,'student'),onDragOver:e=>handleDragOver(e,'student'),onDragLeave:e=>handleDragLeave(e,'student'),style:{cursor:'pointer'},onClick:()=>{var _studentFileRef$curre;return(_studentFileRef$curre=studentFileRef.current)===null||_studentFileRef$curre===void 0?void 0:_studentFileRef$curre.click();},children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-upload fa-2x text-primary\"})}),/*#__PURE__*/_jsx(\"h6\",{children:\"Student Assignment\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-2\",children:\"Drag & drop ZIP file here or click to select\"}),studentFile&&/*#__PURE__*/_jsxs(Alert,{variant:\"info\",className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:studentFile.name}),/*#__PURE__*/_jsx(\"br\",{}),\"Size: \",formatFileSize(studentFile.size)]}),studentProgress&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(ProgressBar,{now:studentProgress.percentage,label:`${studentProgress.percentage}%`,variant:\"primary\"})}),/*#__PURE__*/_jsx(\"input\",{ref:studentFileRef,type:\"file\",accept:\".zip\",style:{display:'none'},onChange:e=>{var _e$target$files;const file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];if(file)handleFileSelect(file,'student');}})]})}),/*#__PURE__*/_jsx(Col,{md:6,children:/*#__PURE__*/_jsxs(\"div\",{className:`upload-area p-4 border-2 border-dashed rounded text-center mb-3 ${dragOver.reference?'border-success bg-light':'border-secondary'}`,onDrop:e=>handleDrop(e,'reference'),onDragOver:e=>handleDragOver(e,'reference'),onDragLeave:e=>handleDragLeave(e,'reference'),style:{cursor:'pointer'},onClick:()=>{var _referenceFileRef$cur;return(_referenceFileRef$cur=referenceFileRef.current)===null||_referenceFileRef$cur===void 0?void 0:_referenceFileRef$cur.click();},children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-file-code fa-2x text-success\"})}),/*#__PURE__*/_jsx(\"h6\",{children:\"Reference Solution\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-muted mb-2\",children:\"Drag & drop ZIP file here or click to select\"}),referenceFile&&/*#__PURE__*/_jsxs(Alert,{variant:\"success\",className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"strong\",{children:referenceFile.name}),/*#__PURE__*/_jsx(\"br\",{}),\"Size: \",formatFileSize(referenceFile.size)]}),referenceProgress&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(ProgressBar,{now:referenceProgress.percentage,label:`${referenceProgress.percentage}%`,variant:\"success\"})}),/*#__PURE__*/_jsx(\"input\",{ref:referenceFileRef,type:\"file\",accept:\".zip\",style:{display:'none'},onChange:e=>{var _e$target$files2;const file=(_e$target$files2=e.target.files)===null||_e$target$files2===void 0?void 0:_e$target$files2[0];if(file)handleFileSelect(file,'reference');}})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-3\",children:/*#__PURE__*/_jsx(Button,{variant:\"primary\",size:\"lg\",onClick:handleUpload,disabled:!studentFile||!referenceFile||uploading,children:uploading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"spinner-border spinner-border-sm me-2\",role:\"status\",\"aria-hidden\":\"true\"}),\"Uploading...\"]}):'🚀 Start Analysis'})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-3\",children:/*#__PURE__*/_jsxs(\"small\",{className:\"text-muted\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Requirements:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"mb-0 mt-1\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"Only ZIP files are supported\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Maximum file size: 50MB\"}),/*#__PURE__*/_jsx(\"li\",{children:\"ZIP should contain Java source code files (.java)\"})]})]})})]})]});};export default FileUpload;","map":{"version":3,"names":["React","useState","useRef","useCallback","Card","Button","Alert","ProgressBar","Row","Col","apiService","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","FileUpload","_ref","onFileUploaded","onError","studentFile","setStudentFile","referenceFile","setReferenceFile","studentProgress","setStudentProgress","referenceProgress","setReferenceProgress","uploading","setUploading","dragOver","setDragOver","student","reference","studentFileRef","referenceFileRef","validateFile","file","maxSize","allowedTypes","includes","type","name","toLowerCase","endsWith","size","handleFileSelect","error","handleDrop","e","preventDefault","files","Array","from","dataTransfer","length","handleDragOver","handleDragLeave","uploadFile","response","progress","success","uploadedFile","id","data","fileId","status","uploadDate","Date","Error","message","handleUpload","Promise","all","formatFileSize","bytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed","className","children","Header","Body","md","onDrop","onDragOver","onDragLeave","style","cursor","onClick","_studentFileRef$curre","current","click","variant","now","percentage","label","ref","accept","display","onChange","_e$target$files","target","_referenceFileRef$cur","_e$target$files2","disabled","role"],"sources":["/Users/ziqianfu/diff-grader/frontend/src/components/FileUpload.tsx"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\nimport { Card, Button, Alert, ProgressBar, Row, Col } from 'react-bootstrap';\nimport { UploadProgress, UploadedFile } from '../types';\nimport apiService from '../services/api';\n\ninterface FileUploadProps {\n  onFileUploaded: (file: UploadedFile, type: 'student' | 'reference') => void;\n  onError: (error: string) => void;\n}\n\nconst FileUpload: React.FC<FileUploadProps> = ({ onFileUploaded, onError }) => {\n  const [studentFile, setStudentFile] = useState<File | null>(null);\n  const [referenceFile, setReferenceFile] = useState<File | null>(null);\n  const [studentProgress, setStudentProgress] = useState<UploadProgress | null>(null);\n  const [referenceProgress, setReferenceProgress] = useState<UploadProgress | null>(null);\n  const [uploading, setUploading] = useState<boolean>(false);\n  const [dragOver, setDragOver] = useState<{ student: boolean; reference: boolean }>({\n    student: false,\n    reference: false,\n  });\n\n  const studentFileRef = useRef<HTMLInputElement>(null);\n  const referenceFileRef = useRef<HTMLInputElement>(null);\n\n  const validateFile = (file: File): string | null => {\n    const maxSize = 50 * 1024 * 1024; // 50MB\n    const allowedTypes = ['application/zip', 'application/x-zip-compressed'];\n\n    if (!allowedTypes.includes(file.type) && !file.name.toLowerCase().endsWith('.zip')) {\n      return 'Only ZIP files are allowed';\n    }\n\n    if (file.size > maxSize) {\n      return 'File size must be less than 50MB';\n    }\n\n    return null;\n  };\n\n  const handleFileSelect = (file: File, type: 'student' | 'reference') => {\n    const error = validateFile(file);\n    if (error) {\n      onError(error);\n      return;\n    }\n\n    if (type === 'student') {\n      setStudentFile(file);\n    } else {\n      setReferenceFile(file);\n    }\n  };\n\n     const handleDrop = useCallback(\n     (e: React.DragEvent<HTMLDivElement>, type: 'student' | 'reference') => {\n       e.preventDefault();\n       setDragOver({ ...dragOver, [type]: false });\n\n       const files = Array.from(e.dataTransfer.files);\n       if (files.length > 0) {\n         handleFileSelect(files[0], type);\n       }\n     },\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n     [dragOver]\n   );\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>, type: 'student' | 'reference') => {\n    e.preventDefault();\n    setDragOver({ ...dragOver, [type]: true });\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>, type: 'student' | 'reference') => {\n    e.preventDefault();\n    setDragOver({ ...dragOver, [type]: false });\n  };\n\n  const uploadFile = async (file: File, type: 'student' | 'reference') => {\n    try {\n      const response = await apiService.uploadFile(\n        file,\n        type,\n        (progress: UploadProgress) => {\n          if (type === 'student') {\n            setStudentProgress(progress);\n          } else {\n            setReferenceProgress(progress);\n          }\n        }\n      );\n\n      if (response.success) {\n        const uploadedFile: UploadedFile = {\n          id: response.data.fileId,\n          name: file.name,\n          size: file.size,\n          type,\n          status: 'uploaded',\n          uploadDate: new Date(),\n        };\n        onFileUploaded(uploadedFile, type);\n      } else {\n        throw new Error(response.error || 'Upload failed');\n      }\n    } catch (error) {\n      onError(`Failed to upload ${type} file: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    }\n  };\n\n  const handleUpload = async () => {\n    if (!studentFile || !referenceFile) {\n      onError('Please select both student and reference files');\n      return;\n    }\n\n    setUploading(true);\n    setStudentProgress(null);\n    setReferenceProgress(null);\n\n    try {\n      await Promise.all([\n        uploadFile(studentFile, 'student'),\n        uploadFile(referenceFile, 'reference'),\n      ]);\n    } catch (error) {\n      onError(`Upload failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n    } finally {\n      setUploading(false);\n      setStudentProgress(null);\n      setReferenceProgress(null);\n    }\n  };\n\n  const formatFileSize = (bytes: number): string => {\n    if (bytes === 0) return '0 Bytes';\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  return (\n    <Card className=\"mb-4\">\n      <Card.Header>\n        <h4 className=\"mb-0\">📁 Upload Assignment Files</h4>\n      </Card.Header>\n      <Card.Body>\n        <Row>\n          <Col md={6}>\n            <div\n              className={`upload-area p-4 border-2 border-dashed rounded text-center mb-3 ${\n                dragOver.student ? 'border-primary bg-light' : 'border-secondary'\n              }`}\n              onDrop={(e) => handleDrop(e, 'student')}\n              onDragOver={(e) => handleDragOver(e, 'student')}\n              onDragLeave={(e) => handleDragLeave(e, 'student')}\n              style={{ cursor: 'pointer' }}\n              onClick={() => studentFileRef.current?.click()}\n            >\n              <div className=\"mb-2\">\n                <i className=\"fas fa-upload fa-2x text-primary\"></i>\n              </div>\n              <h6>Student Assignment</h6>\n              <p className=\"text-muted mb-2\">\n                Drag & drop ZIP file here or click to select\n              </p>\n              {studentFile && (\n                <Alert variant=\"info\" className=\"mt-2\">\n                  <strong>{studentFile.name}</strong><br />\n                  Size: {formatFileSize(studentFile.size)}\n                </Alert>\n              )}\n              {studentProgress && (\n                <div className=\"mt-2\">\n                  <ProgressBar \n                    now={studentProgress.percentage} \n                    label={`${studentProgress.percentage}%`}\n                    variant=\"primary\"\n                  />\n                </div>\n              )}\n              <input\n                ref={studentFileRef}\n                type=\"file\"\n                accept=\".zip\"\n                style={{ display: 'none' }}\n                onChange={(e) => {\n                  const file = e.target.files?.[0];\n                  if (file) handleFileSelect(file, 'student');\n                }}\n              />\n            </div>\n          </Col>\n\n          <Col md={6}>\n            <div\n              className={`upload-area p-4 border-2 border-dashed rounded text-center mb-3 ${\n                dragOver.reference ? 'border-success bg-light' : 'border-secondary'\n              }`}\n              onDrop={(e) => handleDrop(e, 'reference')}\n              onDragOver={(e) => handleDragOver(e, 'reference')}\n              onDragLeave={(e) => handleDragLeave(e, 'reference')}\n              style={{ cursor: 'pointer' }}\n              onClick={() => referenceFileRef.current?.click()}\n            >\n              <div className=\"mb-2\">\n                <i className=\"fas fa-file-code fa-2x text-success\"></i>\n              </div>\n              <h6>Reference Solution</h6>\n              <p className=\"text-muted mb-2\">\n                Drag & drop ZIP file here or click to select\n              </p>\n              {referenceFile && (\n                <Alert variant=\"success\" className=\"mt-2\">\n                  <strong>{referenceFile.name}</strong><br />\n                  Size: {formatFileSize(referenceFile.size)}\n                </Alert>\n              )}\n              {referenceProgress && (\n                <div className=\"mt-2\">\n                  <ProgressBar \n                    now={referenceProgress.percentage} \n                    label={`${referenceProgress.percentage}%`}\n                    variant=\"success\"\n                  />\n                </div>\n              )}\n              <input\n                ref={referenceFileRef}\n                type=\"file\"\n                accept=\".zip\"\n                style={{ display: 'none' }}\n                onChange={(e) => {\n                  const file = e.target.files?.[0];\n                  if (file) handleFileSelect(file, 'reference');\n                }}\n              />\n            </div>\n          </Col>\n        </Row>\n\n        <div className=\"text-center mt-3\">\n          <Button\n            variant=\"primary\"\n            size=\"lg\"\n            onClick={handleUpload}\n            disabled={!studentFile || !referenceFile || uploading}\n          >\n            {uploading ? (\n              <>\n                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                Uploading...\n              </>\n            ) : (\n              '🚀 Start Analysis'\n            )}\n          </Button>\n        </div>\n\n        <div className=\"mt-3\">\n          <small className=\"text-muted\">\n            <strong>Requirements:</strong>\n            <ul className=\"mb-0 mt-1\">\n              <li>Only ZIP files are supported</li>\n              <li>Maximum file size: 50MB</li>\n              <li>ZIP should contain Java source code files (.java)</li>\n            </ul>\n          </small>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default FileUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}